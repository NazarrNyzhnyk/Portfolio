CREATE DATABASE edu;
USE edu;
CREATE TABLE edu.universities (
id INT PRIMARY KEY AUTO_INCREMENT,
nname VARCHAR (40),
city VARCHAR (30)
);
INSERT INTO universities
VALUES (1, "ZDTU", "Zhytomyr"),
(2, "KNU", "Kyiv"),
(3, "LNU", "Lviv"),
(4, "DPU","Drohobych");
SELECT * FROM edu.universities;


CREATE TABLE edu.fuculties (
id INT PRIMARY KEY AUtO_INCREMENT NOT NULL,
Name VARCHAR (40),
UniversityId INT,
FOREIGN KEY (UniversityId) REFERENCES universities(id)
);
INSERT INTO fuculties
VALUES (1, "mining engineering", 1),
(2, "phyology", 4),
(3, "physical and mathematical", 3),
(4, "Biotechnology", 2);
SELECT * FROM edu.fuculties;


CREATE TABLE edu.grroups (
id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
GroupNumber VARCHAR (30),
Fucultyid INT,
FOREIGN KEY (Fucultyid) REFERENCES fuculties(id)
);
INSERT INTO grroups
VALUES (1, "131", 1),
(2, "201", 1),
(3, "331", 1),
(4, "431", 1),
(5, "531", 1),
(6, "101", 3),
(7, "201", 3),
(8, "301", 3),
(9, "401", 3),
(10, "501", 3),
(11, "109", 2),
(12, "225", 2),
(13, "312", 2),
(14, "431", 2),
(15, "504", 2),
(16, "191", 4),
(17, "201", 4),
(18, "398", 4),
(19, "408", 4),
(20, "591", 4),
(21, "141", 1),
(22, "581", 1),
(23, "221", 3),
(24, "441", 3),
(25, "121", 4),
(26, "245", 2),
(27, "435", 2);
SELECT * FROM edu.grroups

CREATE TABLE students (
id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
Name VARCHAR (30),
Surname VARCHAR (30),
age INT,
Groupid INT,
FOREIGN KEY (Groupid) REFERENCES grroups (id)
);

INSERT INTO students
VALUES (1, "Ivan", "Babak", 18, 21),
(2,"Olha","Polupan", 22, 25),
(3,"Nazar","Nyzhnyk",20, 2),
(4,"Oksana","Panchuk",19, 5),
(5,"Petro","Paska",18, 21),
(6,"Vasyl","Nagornyi",21,21),
(7, "Bogdan", "Gora",31,12),
(8,"Iryna","River",26,15),
(9,"Nastya","Pylypec",18,16),
(10,"Viktoria","Garna",19,19),
(11,"Roman","Shamil",22,7);

SELECT * FROM students;
*
*
*
SELECT * FROM edu.universities;
SELECT * FROM edu.groups WHERE GroupNumber > 300
SELECT * FROM edu.universities WHERE nname LIKE '%U%'
*
*
*
SELECT MIN(age) AS "Age of the youngest student"
FROM students

SELECT MAX(age) AS "Age of the oldest student"
FROM students

SELECT AVG(age) AS "Average age of the student"
FROM students

SELECT CONTACT(name, " ", surname) AS "Name, surname"
FROM students

SELECT COUNT (*) "Students"
FROM students

SELECT SUM (id) AS "Amount of students"
FROM students

SELECT * FROM edu.studets ORDER BY Name

SELECT * FROM edu.studets JOIN edu.grroups ON students.Groupid = grroups.id
UNION ALL
SELECT * FROM edu.grroups JOIN edu.studets ON students.Groupid = grroups.id WHERE Groupid is NULL







